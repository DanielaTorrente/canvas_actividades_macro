import os
import zipfile

# Estructura y contenido actualizado del proyecto React + Vite funcional

project_files = {
    "canvas_actividades_macro/public/index.html": """<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Canvas de Actividades Docentes</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>
""",
    "canvas_actividades_macro/src/main.jsx": """import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App.jsx";
import "./index.css";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
""",
    "canvas_actividades_macro/src/App.jsx": """import CanvasActividades from "./componentes/CanvasActividades";

function App() {
  return (
    <div className="p-6 font-sans">
      <h1 className="text-2xl font-bold mb-4">Canvas de Actividades Docentes</h1>
      <CanvasActividades />
    </div>
  );
}

export default App;
""",
    "canvas_actividades_macro/src/componentes/CanvasActividades.jsx": """import { useState } from "react";

export default function CanvasActividades() {
  const [actividades, setActividades] = useState([
    {
      docente: "Prof. Daniela Torrente",
      unidad: "Unidad 1",
      actividad: "Preparar clase de apertura",
      fecha: "2025-05-10",
      logro: "Clase introductoria en aula",
      estado: "Cumplido",
      observaciones: "Grabada y subida al campus"
    }
  ]);

  const [nueva, setNueva] = useState({
    docente: "",
    unidad: "",
    actividad: "",
    fecha: "",
    logro: "",
    estado: "Pendiente",
    observaciones: ""
  });

  const agregar = () => {
    setActividades([...actividades, nueva]);
    setNueva({ docente: "", unidad: "", actividad: "", fecha: "", logro: "", estado: "Pendiente", observaciones: "" });
  };

  return (
    <>
      <div className="grid grid-cols-2 gap-4 mb-6">
        <input className="border p-2" placeholder="Docente" value={nueva.docente} onChange={e => setNueva({ ...nueva, docente: e.target.value })} />
        <input className="border p-2" placeholder="Unidad" value={nueva.unidad} onChange={e => setNueva({ ...nueva, unidad: e.target.value })} />
        <input className="border p-2" placeholder="Actividad" value={nueva.actividad} onChange={e => setNueva({ ...nueva, actividad: e.target.value })} />
        <input className="border p-2" type="date" value={nueva.fecha} onChange={e => setNueva({ ...nueva, fecha: e.target.value })} />
        <input className="border p-2" placeholder="Logro" value={nueva.logro} onChange={e => setNueva({ ...nueva, logro: e.target.value })} />
        <input className="border p-2" placeholder="Estado" value={nueva.estado} onChange={e => setNueva({ ...nueva, estado: e.target.value })} />
        <textarea className="border p-2 col-span-2" placeholder="Observaciones" value={nueva.observaciones} onChange={e => setNueva({ ...nueva, observaciones: e.target.value })}></textarea>
        <button onClick={agregar} className="bg-blue-600 text-white p-2 col-span-2">Agregar Actividad</button>
      </div>

      <table className="table-auto w-full">
        <thead>
          <tr>
            <th>Docente</th>
            <th>Unidad</th>
            <th>Actividad</th>
            <th>Fecha</th>
            <th>Logro</th>
            <th>Estado</th>
            <th>Observaciones</th>
          </tr>
        </thead>
        <tbody>
          {actividades.map((a, i) => (
            <tr key={i}>
              <td>{a.docente}</td>
              <td>{a.unidad}</td>
              <td>{a.actividad}</td>
              <td>{a.fecha}</td>
              <td>{a.logro}</td>
              <td>{a.estado}</td>
              <td>{a.observaciones}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </>
  );
}
""",
    "canvas_actividades_macro/src/index.css": "body { font-family: sans-serif; margin: 0; padding: 1rem; background: #f9f9f9; }",
    "canvas_actividades_macro/package.json": """{
  "name": "canvas-actividades-macro",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@vitejs/plugin-react": "^4.0.0",
    "vite": "^4.4.9"
  }
}""",
    "canvas_actividades_macro/vite.config.js": """import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";

export default defineConfig({
  plugins: [react()],
});
"""
}

# Crear el archivo zip del proyecto
zip_path = "/mnt/data/canvas_actividades_macro_completo.zip"
with zipfile.ZipFile(zip_path, "w") as zipf:
    for filepath, content in project_files.items():
        os.makedirs(os.path.dirname(filepath), exist_ok=True)
        with open(filepath, "w", encoding="utf-8") as f:
            f.write(content)
        zipf.write(filepath)

zip_path
